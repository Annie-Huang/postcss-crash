PostCSS Crash Course (https://www.youtube.com/watch?v=SP8mSVSAh6s)

https://github.com/postcss/postcss#usage
https://www.postcss.parts/      <---------- You can see all the post css plugin in here.
https://postcss.org/

https://github.com/postcss/autoprefixer
https://caniuse.com/?search=%3Aplaceholder
https://github.com/csstools/postcss-preset-env
https://github.com/csstools/precss
https://github.com/postcss/postcss-import

https://github.com/bradtraversy/postcss-crash
https://github.com/Annie-Huang/postcss-crash

-------------------------------------------------------------

npm Scripts
To use PostCSS from your command-line interface or with npm scripts there is postcss-cli.
postcss --use autoprefixer -o main.css css/*.css

PS C:\react\postcss-crash> npm run watch:css
PS C:\react\postcss-crash> npm run start


PS C:\react\postcss-crash> npm i -D postcss postcss-cli
PS C:\react\postcss-crash> npm i -D autoprefixer
PS C:\react\postcss-crash> npm i -D postcss-preset-env
PS C:\react\postcss-crash> npm i -D precss
PS C:\react\postcss-crash> npm i postcss-import
PS C:\react\postcss-crash> npm i -D postcss-assets

Autoprefixer:
PostCSS plugin to parse CSS and add vendor prefixes to CSS rules using values from Can I Use. It is recommended by Google and used in Twitter and Alibaba.

PostCSS Preset Env
PostCSS Preset Env lets you convert modern CSS into something most browsers can understand, determining the polyfills you need based on your targeted browsers or runtime environments.
postcss-preset-env allows you to use future CSS features today.

postcssPresetEnv({ stage: 0 })
The stage can be 0 (experimental) through 4 (stable), or false. Setting stage to false will disable every polyfill. Doing this would only be useful if you intended to exclusively use the features option.
Default: 2

PreCSS
PreCSS lets you use Sass-like markup and staged CSS features in CSS.

postcss-import
PostCSS plugin to transform @import rules by inlining content.
